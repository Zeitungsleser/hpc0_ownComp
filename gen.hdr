@ "ustr.hdr"

type GenReg: unsigned;

extern fn genReleaseReg(reg: GenReg);

extern fn genConstant(val: -> UStr): GenReg;

enum GenInstr{
    GEN_ADD,
    GEN_SUB,
    GEN_MUL,
    GEN_DIV,
};

extern fn genInstr(instr: GenInstr, left: GenReg, right: GenReg): GenReg;

extern fn genHalt(exitCode: GenReg);

extern fn genLoadAddress(varName: -> UStr): GenReg;
extern fn genFetch(addr: GenReg): GenReg;
extern fn genStore(val: GenReg, addr: GenReg);

//-- handle functions
extern fn genInit();
extern fn genBeginFunctionDefinition(name: -> UStr);
extern fn genEndFunctionDefinition();
extern fn genPrepareFunctionCall(numArgs: int);
extern fn genExecuteFunctionCall(name: -> UStr, numArgs: int): GenReg;
